[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "marray"
authors = [{name = "Matt Haberland", email = "mhaberla@calpoly.edu"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = ["version", "description"]
dependencies = []
requires-python = ">=3.10"

[project.optional-dependencies]
test = ["numpy", "pytest"]

[project.urls]
Home = "https://github.com/mdhaber/marray"

[tool.ruff]
target-version = "py310"
builtins = ["ellipsis"]
exclude = [".git", ".eggs", "build", "dist", "__pycache__"]
line-length = 100

[tool.ruff.lint]
ignore = [
  "E402", # module level import not at top of file
  # "E501",  # line too long - let black worry about that
  "E731",  # do not assign a lambda expression, use a def
  "UP038", # type union instead of tuple for isinstance etc
]
select = [
  "F",   # Pyflakes
  "E",   # Pycodestyle
  "I",   # isort
  "UP",  # Pyupgrade
  "TID", # flake8-tidy-imports
  "W",
]
extend-safe-fixes = [
  "TID252", # absolute imports
]
fixable = ["I", "TID252", "UP"]

[tool.ruff.lint.isort]
known-first-party = ["marray"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.coverage.run]
source = ["marray"]
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore:invalid value encountered:RuntimeWarning",
    "ignore:divide by zero encountered:RuntimeWarning",
    "ignore:overflow encountered:RuntimeWarning",
]
